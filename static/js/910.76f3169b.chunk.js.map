{"version":3,"file":"static/js/910.76f3169b.chunk.js","mappings":"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","sources":["components/GradientButton/GradientButton.styled.jsx","components/GradientButton/GradientButton.jsx","components/RegistrationForm/RegistrationForm.styled.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.styled.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled, { keyframes } from 'styled-components';\n\nconst gradientAnimation = keyframes`\n  0% {\n    left: -100%;\n  }\n  50%, 100% {\n    border-radius: 25px;\n    left: 100%;\n  }\n`;\n\nconst gradientAnimationDelay = keyframes`\n  0% {\n    top: -100%;\n  }\n  50%, 100% {\n    border-radius: 25px;\n    top: 100%;\n  }\n`;\n\nconst gradientAnimation2 = keyframes`\n  0% {\n    right: -100%;\n  }\n  50%, 100% {\n    border-radius: 25px;\n    right: 100%;\n  }\n`;\n\nconst gradientAnimation3 = keyframes`\n  0% {\n    right: -100%;\n  }\n  50%, 100% {\n    border-radius: 25px;\n    right: 100%;\n  }\n`;\n\nexport const StyledButton = styled.button`\n  position: relative;\n  display: inline-block;\n  border-radius: 25px;\n  padding: 5px;\n  width: 150px; \n  color: #03e9f4;\n  font-size: 16px;\n  jastify-content: center;\n  align-items:center;\n  \n  font-weight:800;\n  text-decoration: none;\n  text-transform: uppercase;\n  overflow: hidden;\n  transition: 0.5s;\n  margin: 10px auto; \n\n  &:hover {\n    background: #03e9f4;\n    color: #fff;\n    border-radius: 10px;\n    box-shadow: 0 0 5px #03e9f4, 0 0 25px #03e9f4, 0 0 50px #03e9f4, 0 0 100px #03e9f4;\n  }\n\n  &:hover span:nth-child(1) {\n    animation: ${gradientAnimation} 1s linear infinite;\n  }\n\n  &:hover span:nth-child(2) {\n    animation: ${gradientAnimation2} 1s linear infinite;\n    animation-delay: 0.25s;\n  }\n\n  &:hover span:nth-child(3) {\n    animation: ${gradientAnimationDelay} 1s linear infinite;\n    animation-delay: 0.5s;\n  }\n\n  &:hover span:nth-child(4) {\n    animation: ${gradientAnimation3} 1s linear infinite;\n    animation-delay: 0.75s;\n  }\n`;\n\nexport const GradientSpan = styled.span`\n  position: absolute;\n  display: block;\n`;","import {\n    StyledButton,\n    GradientSpan,\n    \n   \n  } from './GradientButton.styled';\n\n  export const GradientButton = ({ type, disabled, children }) => {\n    return (\n      <StyledButton type={type} disabled={disabled}>\n        {children}\n        <GradientSpan></GradientSpan>\n        <GradientSpan></GradientSpan>\n        <GradientSpan></GradientSpan>\n        <GradientSpan></GradientSpan>\n      </StyledButton>\n    );\n  };\n\n\n","import styled, { keyframes } from 'styled-components';\nimport { Form, Field } from 'formik';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\n\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n`;\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  flex-grow: 1;\n  padding-bottom: 1rem;\n  animation: ${fadeIn} 0.5s ease;\n`;\n\nexport const StyledRegisterSection = styled.section`\nwidth: 100%;\nmax-width: 250px;\nmin-height: 400px;\ndisplay: flex;\nflex-direction: column;\njustify-content: flex-start;\npadding: 0 2rem;\nbackground-color: rgba(0, 0, 0, 0.4);\nanimation: ${fadeIn} 0.5s ease;\nposition: relative;\nborder-radius: 10px;\nbox-shadow: 0 0 5px #03e9f4, 0 0 25px #03e9f4, 0 0 50px #03e9f4, 0 0 100px #03e9f4;\n&::before {\n  content: '';\n  position: absolute;\n  top: -5px;\n  left: -5px;\n  right: -5px;\n  bottom: -5px;\n  box-shadow: 0 0 1px #03e9f4, 0 0 1px #03e9f4, 0 0 1px #03e9f4, 0 0 1px #03e9f4;\n  background-clip: padding-box;\n \n  z-index: -1;\n}\n`;\n\nexport const StyledFontAwesomeIcon = styled(FontAwesomeIcon)`\n  margin-right: 0.25rem;\n  &.valid {\n    color: limegreen;\n    margin-left: 0.25rem;\n  }\n\n  &.invalid {\n    color: red;\n    margin-left: 0.25rem;\n  }\n`;\n\nexport const StyledField = styled(Field)`\n  padding: 5px;\n  font-size: 12px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  margin-bottom: 2px;\n  transition: border-color 0.3s ease;\n\n  &:focus {\n    outline: none;\n    border-color: #007bff;\n  }\n`;\n\nexport const StyledInstructions = styled.div`\n  font-size: 0.50rem;\n  border-radius: 0.5rem;\n  background: #000;\n  color: #fff;\n  top:0;\n  padding: 0.4rem 0.7rem;\n  position: relative;\n  \n  opacity: 0;\n  animation: ${fadeIn} 0.5s ease forwards;\n  transition: opacity 0.3s ease;\n  text-align: center;\n\n  ${StyledField}:focus + & {\n    opacity: 1;\n  }\n\n  > svg {\n    float: left; \n    margin-right: 0rem;\n  }\n`;\n\n\nexport const StyledLabel = styled.label`\n  font-size: 18px;\n  color :white;\n  margin-bottom: 10px;\n  margin-top: 5px;\n  font-weight:500;\n`;\n\n\n\n\nexport const SignInText = styled.p`\n  text-decoration: none;\n  text-align: center;\n  color: white;\n  font-size: 15px;\n  font-weight: 400;\n\n`;\n\n","import styled, { keyframes } from 'styled-components';\n\n\n\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n`;\n\nexport const StyledContactFormSection = styled.section`\nwidth: 100%;\nmax-width: 230px;\nmin-height: 300px;\ndisplay: flex;\nflex-direction: column;\njustify-content: flex-start;\npadding: 0 2rem;\nbackground-color: rgba(0, 0, 0, 0.4);\nanimation: ${fadeIn} 0.5s ease;\nposition: relative;\nborder-radius: 10px;\nbox-shadow: 0 0 5px #03e9f4, 0 0 25px #03e9f4, 0 0 50px #03e9f4, 0 0 100px #03e9f4;\n&::before {\n  content: '';\n  position: absolute;\n  top: -5px;\n  left: -5px;\n  right: -5px;\n  bottom: -5px;\n  box-shadow: 0 0 1px #03e9f4, 0 0 1px #03e9f4, 0 0 1px #03e9f4, 0 0 1px #03e9f4;\n  background-clip: padding-box;\n \n  z-index: -1;\n}\n`;\n\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport { addContact } from './../../redux/contacts/operations';\nimport {\n  showNotification,\n  hideNotification,\n} from './../../redux/notification/notificationSlice';\nimport { selectContacts } from './../../redux/contacts/selectors';\nimport { Notification } from './../Notification/Notification';\nimport { selectNotification } from './../../redux/notification/selector';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { PatternFormat } from 'react-number-format';\nimport { GradientButton } from './../GradientButton/GradientButton';\nimport { StyledContactFormSection } from './ContactForm.styled';\nimport {\n  StyledForm,\n  StyledLabel,\n  StyledFontAwesomeIcon,\n  StyledInstructions,\n  StyledField,\n} from './../RegistrationForm/RegistrationForm.styled';\nimport {\n  faCheck,\n  faTimes,\n  faInfoCircle,\n} from '@fortawesome/free-solid-svg-icons';\nconst NAME_REGEX = /^[A-z][A-z0-9-_]{3,23}$/;\nconst NUMBER_REGEX = /^\\+38 \\(0[0-9]{2}\\) [0-9]{3}-[0-9]{2}-[0-9]{2}$/;\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .trim()\n    .required('Name is required')\n    .min(5, 'Name should be of a minimum 4 characters length')\n    .matches(NAME_REGEX, 'Name must contain letters and may include digits'),\n  number: Yup.string().matches(NUMBER_REGEX, 'Invalid phone number format'),\n});\nconst initialValues = { name: '', number: '' };\nexport const ContactForm = () => {\n  const [nameIcon, setNameIcon] = useState('faTimes');\n  const [numberIcon, setNumberIcon] = useState('faTimes');\n  const contacts = useSelector(selectContacts);\n  const notifications = useSelector(selectNotification);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    setNameIcon('faTimes');\n    setNumberIcon('faTimes');\n    const formattedName =\n      values.name.charAt(0).toUpperCase() + values.name.slice(1);\n    const formattedNumber = values.number;\n    const existingContactByName = contacts.find(\n      contact => contact.name === formattedName\n    );\n    const existingContactByNumber = contacts.find(\n      contact => contact.number === formattedNumber\n    );\n\n    if (existingContactByName) {\n      dispatch(\n        showNotification({\n          id: nanoid(),\n          title: 'Error',\n          type: 'error',\n          content: (\n            <>\n              Name <b>{formattedName}</b> is already in contacts\n            </>\n          ),\n        })\n      );\n      setTimeout(id => {\n        dispatch(hideNotification(id));\n      }, 5000);\n      return;\n    }\n\n    if (existingContactByNumber) {\n      dispatch(\n        showNotification({\n          id: nanoid(),\n          title: 'Error',\n          type: 'error',\n          content: (\n            <>\n              Number <b>{formattedNumber}</b> is already in contacts\n            </>\n          ),\n        })\n      );\n      setTimeout(id => {\n        dispatch(hideNotification(id));\n      }, 5000);\n      return;\n    }\n\n    dispatch(\n      addContact({ name: formattedName, number: formattedNumber, id: nanoid() })\n    );\n\n    resetForm(initialValues);\n    \n\n    dispatch(\n      showNotification({\n        id: nanoid(),\n        title: 'Success',\n        type: 'success',\n        content: (\n          <>\n            Contact <b>{formattedName}</b> has been deleted successfully\n          </>\n        ),\n      })\n    );\n    setTimeout(id => {\n      dispatch(hideNotification(id));\n    }, 5000);\n  };\n  const handleHideNotification = id => {\n    dispatch(hideNotification(id));\n  };\n\n  return (\n    <>\n      {notifications &&\n        notifications.map((notification, index) => (\n          <Notification\n            key={`${notification.id}-${index}`}\n            id={notification.id}\n            type={notification.type}\n            title={notification.title}\n            content={notification.content}\n            onHide={handleHideNotification.id}\n          />\n        ))}\n\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        {({\n          handleSubmit,\n          values,\n          isValid,\n          \n          \n          setFieldValue,\n          errors,\n        }) => (\n          <StyledContactFormSection>\n            <StyledForm onSubmit={handleSubmit}>\n            <StyledLabel htmlFor=\"name\">\n                Name:\n                <StyledFontAwesomeIcon\n                  icon={nameIcon}\n                  className={`validation-icon ${\n                    nameIcon === faCheck ? 'valid' : 'invalid'\n                  }`}\n                />\n              </StyledLabel>\n                <StyledField\n                  type=\"text\"\n                  id=\"name\"\n                  name=\"name\"\n                  value={values.name}\n                  onChange={e => {\n                    const nameIsValid =\n                      validationSchema.fields.name.isValidSync(e.target.value);\n                    setNameIcon(nameIsValid ? faCheck : faTimes);\n                    setFieldValue('name', e.target.value);\n                  }}\n                  onBlur={() => {\n                    if (!errors.name) {\n                      setNameIcon(faCheck);\n                    }\n                  }}\n                />\n                {nameIcon === faTimes && (\n                  <StyledInstructions className=\"instructions\">\n                    <StyledFontAwesomeIcon icon={faInfoCircle} /> 4 to 24\n                    characters.{' '}\n                    <span\n                      aria-label=\"at symbol\"\n                      style={{\n                        fontSize: '10px',\n                        color: 'black',\n                        fontWeight: '500',\n                      }}\n                    >\n                      .\n                    </span>{' '}\n                    Must begin with a letter. <br />\n                    <span\n                      aria-label=\"at symbol\"\n                      style={{\n                        fontSize: '10px',\n                        color: 'black',\n                        fontWeight: '500',\n                      }}\n                    >\n                      ......\n                    </span>{' '}\n                    Letters, numbers, underscores, hyphens allowed.\n                  </StyledInstructions>\n                )}\n             \n             <StyledLabel htmlFor=\"number\">\n                Number:\n                <StyledFontAwesomeIcon\n                  icon={numberIcon}\n                  className={`validation-icon ${\n                    numberIcon === faCheck ? 'valid' : 'invalid'\n                  }`}\n                />\n              </StyledLabel>\n                <PatternFormat\n                  format=\"+38 (0##) ###-##-##\"\n                  mask=\"_\"\n                  allowEmptyFormatting={true}\n                  customInput={StyledField}\n                  type=\"tel\"\n                  id=\"number\"\n                  name=\"number\"\n                  value={values.number}\n                  onChange={e => {\n                    const numberIsValid =\n                      validationSchema.fields.number.isValidSync(\n                        e.target.value\n                      );\n                    setNumberIcon(numberIsValid ? faCheck : faTimes);\n                    setFieldValue('number', e.target.value);\n                  }}\n                  onBlur={() => {\n                    if (!errors.number) {\n                      setNumberIcon(faCheck);\n                    }\n                  }}\n                />\n                {numberIcon === faTimes && (\n                  <StyledInstructions className=\"instructions\">\n                  <StyledFontAwesomeIcon icon={faInfoCircle} /> Correct phone number format: +38 (0XX) XXX-XX-XX\n                  <br />\n                  For example: +38 (099) 123-45-67\n                </StyledInstructions>\n                )}\n             \n\n              <GradientButton type=\"submit\" disabled={!isValid}>\n                Add contact\n              </GradientButton>\n            </StyledForm>\n          </StyledContactFormSection>\n        )}\n      </Formik>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\n\n\nexport const FilterContainer = styled.div`\n  \n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const FilterLabel = styled.label`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nfont-weight: bold;\nmargin-bottom: 5px;\nFont-size: 18px;\n`;\n\nexport const FilterInput = styled.input`\n  max-width: 300px;\n  padding: 8px;\n  margin-top: 20px;\n  margin-left: 10px; \n  border: 1px solid #ccc;\n  border-radius: 4px;\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  FilterContainer,\n  FilterLabel,\n  FilterInput,\n} from './Filter.styled';\nimport { setFilter } from 'redux/filterSlice';\nimport {selectFilter } from 'redux/contacts/selectors';\n\nexport const Filter = () => {\n\n  const dispatch = useDispatch();\n\n  const filter = useSelector(selectFilter);\n\n  const updateFilter = payload => {\n    dispatch(setFilter(payload));\n  };\n\n  const handleChange = event => {\n    updateFilter(event.target.value);\n  };\n\n  \n\n\n  return (\n    <FilterContainer>\n      <FilterLabel>\n        Find contacts by name\n        <FilterInput\n          type=\"text\"\n          placeholder=\"Type a name to search\"\n          name=\"filter\"\n          value={filter}\n          onChange={handleChange}\n        />\n      </FilterLabel>\n    </FilterContainer>\n  );\n};","import styled from 'styled-components';\n\nexport const ContactListContainer = styled.div`\n  padding: 20px;\n`;\n\nexport const StyledTable = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  \n`;\n\nexport const TableHeader = styled.th`\n  padding: 12px 20px; \n  text-align: left;\n  background-color: #f2f2f2;\n  border-bottom: 1px solid #ccc;\n`;\n\nexport const TableCell = styled.td`\n  padding: 12px 20px; \n  text-align: left;\n  border-bottom: 1px solid #ccc;\n`;\n\nexport const TableRow = styled.tr`\n  &:hover {\n    background-color: #e0e0e0;\n  }\n`;\n\nexport const DeleteButton = styled.button`\n  background-color: #ff6347;\n  color: #fff;\n  padding: 5px 10px;\n  border: none;\n  border-radius: 3px;\n  cursor: pointer;\n\n  &:disabled {\n    background-color: #ccc;\n    cursor: not-allowed;\n  }\n`;\n\nexport const StyledNotificationContent = styled.span`\n  span {\n    font-family: inherit;\n    font-size: 13px;\n    font-weight: bold;\n    color: #333; \n  }\n`;\n","import React from 'react';\nimport { nanoid } from 'nanoid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectIsLoading, selectFilteredContacts } from 'redux/contacts/selectors';\nimport { showNotification, hideNotification } from 'redux/notification/notificationSlice';\nimport { Notification } from './../Notification/Notification';\nimport { selectNotification} from './../../redux/notification/selector';\nimport { FaTrash } from 'react-icons/fa';\nimport {\n  ContactListContainer,\n  StyledTable,\n  TableHeader,\n  TableCell,\n  TableRow,\n  DeleteButton,\n \n} from './ContactList.styled';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const contacts = useSelector(selectFilteredContacts);\n  const notifications = useSelector(selectNotification);\n\n  const handleDelete = (id, name) => {\n    dispatch(deleteContact(id));\n    dispatch(\n      showNotification({\n        id: nanoid(),\n        title: 'Success',\n        type: 'success',\n        content: (\n          <>\n            Contact <b>{name}</b> has been deleted successfully\n          </>\n        ),\n      })\n    );\n    setTimeout((id) => {\n      dispatch(hideNotification(id));\n    }, 5000);\n  };\n  const handleHideNotification = id => {\n    dispatch(hideNotification(id));\n  };\n\n  return (\n    <>\n      {notifications &&\n        notifications.map((notification, index) => (\n          <Notification\n            key={`${notification.id}-${index}`}\n            id={notification.id}\n            type={notification.type}\n            title={notification.title}\n            content={notification.content}\n            onHide={handleHideNotification}\n          />\n        ))}\n\n    <ContactListContainer>\n      \n      <StyledTable>\n        <thead>\n          <tr>\n            <TableHeader>Name</TableHeader>\n            <TableHeader>Phone</TableHeader>\n            <TableHeader>Action</TableHeader>\n          </tr>\n        </thead>\n        <tbody>\n          {contacts.map((contact) => (\n            <TableRow key={contact.id}>\n              <TableCell>{contact.name}</TableCell>\n              <TableCell>{contact.number}</TableCell>\n              <TableCell>\n                <DeleteButton\n                  onClick={() => handleDelete(contact.id, contact.name)}\n                  disabled={isLoading}\n                >\n                  <FaTrash /> Delete\n                </DeleteButton>\n              </TableCell>\n            </TableRow>\n          ))}\n        </tbody>\n      </StyledTable>\n    </ContactListContainer>\n    </>\n  );\n};\n","import styled, { keyframes } from 'styled-components';\n\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n    transform: translateY(-20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n`;\n\nexport const AppContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background: linear-gradient(\n    to top,\n    #fff 0%,\n    #43cea2 25%,\n    #185a9d 50%,\n    #43cea2 75%,\n    #185a9d 90%,\n    #ffffff 100%\n  );\n`;\n\nexport const AppHeader = styled.h1`\n  font-size: 34px;\n  margin-top: 50px;\n  margin-bottom: 20px;\n  color: white;\n  animation: ${fadeIn} 1s ease;\n`;\n\nexport const AppContacts = styled.h2`\n  font-size: 32px;\n  margin-bottom: 10px;\n  color: white;\n  animation: ${fadeIn} 1s ease;\n`;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ContactForm } from './../../components/ContactForm/ContactForm';\nimport { Filter } from './../../components/Filter/Filter';\nimport { Loading } from './../../components/Loading/Loading';\nimport { ContactList } from './../../components/ContactList/ContactList';\nimport { useEffect} from 'react';\nimport { fetchContacts } from './../../redux/contacts/operations';\nimport { AppContainer, AppHeader, AppContacts } from './Contacts.styled';\n\nimport { getContactsIsExist } from './../../redux/contacts/selectors';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContactsIsExist);\n \n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <AppContainer>\n      <AppHeader >Phonebook</AppHeader>\n      <ContactForm />\n      <AppContacts>Contacts</AppContacts>\n      <Filter />\n      <Loading />\n      {contacts && <ContactList />}\n    \n    </AppContainer>\n  );\n};\nexport default ContactsPage;"],"names":["gradientAnimation","keyframes","_templateObject","_taggedTemplateLiteral","gradientAnimationDelay","_templateObject2","gradientAnimation2","_templateObject3","gradientAnimation3","_templateObject4","StyledButton","styled","_templateObject5","GradientSpan","_templateObject6","GradientButton","_ref","type","disabled","children","_jsxs","_jsx","fadeIn","StyledForm","Form","StyledRegisterSection","StyledFontAwesomeIcon","FontAwesomeIcon","StyledField","Field","StyledInstructions","StyledLabel","_templateObject7","SignInText","_templateObject8","StyledContactFormSection","validationSchema","Yup","shape","name","trim","required","min","matches","number","initialValues","ContactForm","_useState","useState","_useState2","_slicedToArray","nameIcon","setNameIcon","_useState3","_useState4","numberIcon","setNumberIcon","contacts","useSelector","selectContacts","notifications","selectNotification","dispatch","useDispatch","handleHideNotification","id","hideNotification","_Fragment","map","notification","index","Notification","title","content","onHide","concat","Formik","onSubmit","values","resetForm","formattedName","charAt","toUpperCase","slice","formattedNumber","existingContactByName","find","contact","existingContactByNumber","showNotification","nanoid","setTimeout","addContact","_ref2","handleSubmit","isValid","setFieldValue","errors","htmlFor","icon","className","faCheck","value","onChange","e","nameIsValid","fields","isValidSync","target","faTimes","onBlur","faInfoCircle","style","fontSize","color","fontWeight","PatternFormat","format","mask","allowEmptyFormatting","customInput","numberIsValid","FilterContainer","FilterLabel","FilterInput","Filter","filter","selectFilter","placeholder","event","payload","setFilter","ContactListContainer","StyledTable","TableHeader","TableCell","TableRow","DeleteButton","ContactList","isLoading","selectIsLoading","selectFilteredContacts","onClick","deleteContact","FaTrash","AppContainer","AppHeader","AppContacts","getContactsIsExist","useEffect","fetchContacts","Loading"],"sourceRoot":""}