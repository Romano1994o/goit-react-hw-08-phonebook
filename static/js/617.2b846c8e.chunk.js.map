{"version":3,"file":"static/js/617.2b846c8e.chunk.js","mappings":"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","sources":["components/GradientButton/GradientButton.styled.jsx","components/GradientButton/GradientButton.jsx","components/GradientLink/GradientLink.styled.jsx","components/GradientLink/GradientLink.jsx","components/RegistrationForm/RegistrationForm.styled.jsx","components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/Login/Login.styled.jsx","pages/Login/Login.jsx"],"sourcesContent":["import styled, { keyframes } from 'styled-components';\n\nconst gradientAnimation = keyframes`\n  0% {\n    left: -100%;\n  }\n  50%, 100% {\n    border-radius: 25px;\n    left: 100%;\n  }\n`;\n\nconst gradientAnimationDelay = keyframes`\n  0% {\n    top: -100%;\n  }\n  50%, 100% {\n    border-radius: 25px;\n    top: 100%;\n  }\n`;\n\nconst gradientAnimation2 = keyframes`\n  0% {\n    right: -100%;\n  }\n  50%, 100% {\n    border-radius: 25px;\n    right: 100%;\n  }\n`;\n\nconst gradientAnimation3 = keyframes`\n  0% {\n    right: -100%;\n  }\n  50%, 100% {\n    border-radius: 25px;\n    right: 100%;\n  }\n`;\n\nexport const StyledButton = styled.button`\n  position: relative;\n  display: inline-block;\n  border-radius: 25px;\n  padding: 5px;\n  width: 150px; \n  color: #03e9f4;\n  font-size: 16px;\n  jastify-content: center;\n  align-items:center;\n  \n  font-weight:800;\n  text-decoration: none;\n  text-transform: uppercase;\n  overflow: hidden;\n  transition: 0.5s;\n  margin: 10px auto; \n\n  &:hover {\n    background: #03e9f4;\n    color: #fff;\n    border-radius: 10px;\n    box-shadow: 0 0 5px #03e9f4, 0 0 25px #03e9f4, 0 0 50px #03e9f4, 0 0 100px #03e9f4;\n  }\n\n  &:hover span:nth-child(1) {\n    animation: ${gradientAnimation} 1s linear infinite;\n  }\n\n  &:hover span:nth-child(2) {\n    animation: ${gradientAnimation2} 1s linear infinite;\n    animation-delay: 0.25s;\n  }\n\n  &:hover span:nth-child(3) {\n    animation: ${gradientAnimationDelay} 1s linear infinite;\n    animation-delay: 0.5s;\n  }\n\n  &:hover span:nth-child(4) {\n    animation: ${gradientAnimation3} 1s linear infinite;\n    animation-delay: 0.75s;\n  }\n`;\n\nexport const GradientSpan = styled.span`\n  position: absolute;\n  display: block;\n`;","import {\n    StyledButton,\n    GradientSpan,\n    \n   \n  } from './GradientButton.styled';\n\n  export const GradientButton = ({ type, disabled, children }) => {\n    return (\n      <StyledButton type={type} disabled={disabled}>\n        {children}\n        <GradientSpan></GradientSpan>\n        <GradientSpan></GradientSpan>\n        <GradientSpan></GradientSpan>\n        <GradientSpan></GradientSpan>\n      </StyledButton>\n    );\n  };\n\n\n","import styled, { keyframes } from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nconst gradientAnimation = keyframes`\n  0% {\n    left: -100%;\n  }\n  50%, 100% {\n    left: 100%;\n  }\n`;\n\nconst gradientAnimation2 = keyframes`\n  0% {\n    top: -100%;\n  }\n  50%, 100% {\n    top: 100%;\n  }\n`;\n\nconst gradientAnimation3 = keyframes`\n  0% {\n    right: -100%;\n  }\n  50%, 100% {\n    right: 100%;\n  }\n`;\n\nconst gradientAnimationDelay = keyframes`\n  0% {\n    right: -100%;\n  }\n  50%, 100% {\n    right: 100%;\n  }\n`;\n\nexport const StyledLink = styled(NavLink)`\n  position: relative;\n  display: inline-block;\n  padding: 5px 15px;\n  color: #03e9f4;\n  font-size: 16px;\n  text-decoration: none;\n  \n  overflow: hidden;\n  transition: 0.5s;\n  margin: 10px auto;\n  max-width: 170px;\n  font-weight: 500;\n  background: transparent;\n  border: 2px solid transparent;\n  border-radius: 5px;\n  cursor: pointer;\n\n  &:hover {\n    text-decoration: underline;\n    border-color: #03e9f4;\n  }\n\n  &:hover::before,\n  &:focus::before {\n    content: '';\n    position: absolute;\n    top: -2px;\n    left: -2px;\n    right: -2px;\n    bottom: -2px;\n    background: linear-gradient(90deg, transparent, #03e9f4);\n    z-index: -1;\n    animation: ${gradientAnimation} 1s linear infinite;\n  }\n\n  &:hover::after,\n  &:focus::after {\n    content: '';\n    position: absolute;\n    top: -2px;\n    left: -2px;\n    right: -2px;\n    bottom: -2px;\n    background: linear-gradient(180deg, transparent, #03e9f4);\n    z-index: -1;\n    animation: ${gradientAnimation2} 1s linear infinite;\n    animation-delay: 0.25s;\n  }\n\n  &:hover span:nth-child(1),\n  &:focus span:nth-child(1) {\n    animation: ${gradientAnimation} 1s linear infinite;\n  }\n\n  &:hover span:nth-child(2),\n  &:focus span:nth-child(2) {\n    animation: ${gradientAnimation2} 1s linear infinite;\n    animation-delay: 0.25s;\n  }\n\n  &:hover span:nth-child(3),\n  &:focus span:nth-child(3) {\n    animation: ${gradientAnimationDelay} 1s linear infinite;\n    animation-delay: 0.5s;\n  }\n\n  &:hover span:nth-child(4),\n  &:focus span:nth-child(4) {\n    animation: ${gradientAnimation3} 1s linear infinite;\n    animation-delay: 0.75s;\n  }\n`;\n\nexport const GradientSpan = styled.span`\n  position: absolute;\n  display: block;\n  pointer-events: none;\n`;","\nimport {\n    StyledLink,\n    GradientSpan,\n    \n   \n  } from './GradientLink.styled';\n\n  export const GradientLink = ({ to, type, disabled, children }) => {\n    return (\n      <StyledLink to={to} type={type} disabled={disabled}>\n        {children}\n        <GradientSpan></GradientSpan>\n        <GradientSpan></GradientSpan>\n        <GradientSpan></GradientSpan>\n        <GradientSpan></GradientSpan>\n      </StyledLink>\n    );\n  };\n\n\n","import styled, { keyframes } from 'styled-components';\nimport { Form, Field } from 'formik';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\n\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n`;\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  flex-grow: 1;\n  padding-bottom: 1rem;\n  animation: ${fadeIn} 0.5s ease;\n`;\n\nexport const StyledRegisterSection = styled.section`\nwidth: 100%;\nmax-width: 250px;\nmin-height: 400px;\ndisplay: flex;\nflex-direction: column;\njustify-content: flex-start;\npadding: 0 2rem;\nbackground-color: rgba(0, 0, 0, 0.4);\nanimation: ${fadeIn} 0.5s ease;\nposition: relative;\nborder-radius: 10px;\nbox-shadow: 0 0 5px #03e9f4, 0 0 25px #03e9f4, 0 0 50px #03e9f4, 0 0 100px #03e9f4;\n&::before {\n  content: '';\n  position: absolute;\n  top: -5px;\n  left: -5px;\n  right: -5px;\n  bottom: -5px;\n  box-shadow: 0 0 1px #03e9f4, 0 0 1px #03e9f4, 0 0 1px #03e9f4, 0 0 1px #03e9f4;\n  background-clip: padding-box;\n \n  z-index: -1;\n}\n`;\n\nexport const StyledFontAwesomeIcon = styled(FontAwesomeIcon)`\n  margin-right: 0.25rem;\n  &.valid {\n    color: limegreen;\n    margin-left: 0.25rem;\n  }\n\n  &.invalid {\n    color: red;\n    margin-left: 0.25rem;\n  }\n`;\n\nexport const StyledField = styled(Field)`\n  padding: 5px;\n  font-size: 12px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  margin-bottom: 2px;\n  transition: border-color 0.3s ease;\n\n  &:focus {\n    outline: none;\n    border-color: #007bff;\n  }\n`;\n\nexport const StyledInstructions = styled.div`\n  font-size: 0.50rem;\n  border-radius: 0.5rem;\n  background: #000;\n  color: #fff;\n  top:0;\n  padding: 0.4rem 0.7rem;\n  position: relative;\n  \n  opacity: 0;\n  animation: ${fadeIn} 0.5s ease forwards;\n  transition: opacity 0.3s ease;\n  text-align: center;\n\n  ${StyledField}:focus + & {\n    opacity: 1;\n  }\n\n  > svg {\n    float: left; \n    margin-right: 0rem;\n  }\n`;\n\n\nexport const StyledLabel = styled.label`\n  font-size: 18px;\n  color :white;\n  margin-bottom: 10px;\n  margin-top: 5px;\n  font-weight:500;\n`;\n\n\n\n\nexport const SignInText = styled.p`\n  text-decoration: none;\n  text-align: center;\n  color: white;\n  font-size: 15px;\n  font-weight: 400;\n\n`;\n\n","import styled, { keyframes } from 'styled-components';\n\n\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n`;\n\nexport const StyledLoginSection = styled.section`\n  width: 100%;\n  max-width: 250px;\n  min-height: 400px;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  padding: 0 2rem;\n  background-color: rgba(0, 0, 0, 0.4);\n  animation: ${fadeIn} 0.5s ease;\n  position: relative;\n  border-radius: 10px;\n  box-shadow: 0 0 5px #03e9f4, 0 0 25px #03e9f4, 0 0 50px #03e9f4, 0 0 100px #03e9f4;\n  &::before {\n    content: '';\n    position: absolute;\n    top: -5px;\n    left: -5px;\n    right: -5px;\n    bottom: -5px;\n    box-shadow: 0 0 1px #03e9f4, 0 0 1px #03e9f4, 0 0 1px #03e9f4, 0 0 1px #03e9f4;\n    background-clip: padding-box;\n   \n    z-index: -1;\n  }\n`;\n\nexport const SignInText = styled.p`\ncolor: white;\n`;\n\n\n\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport {\n  StyledForm,\n  StyledLabel,\n  StyledFontAwesomeIcon,\n  StyledInstructions,\n  SignInText,\n  StyledField,\n} from './../RegistrationForm/RegistrationForm.styled';\n\nimport { StyledLoginSection } from './LoginForm.styled';\nimport { GradientButton } from './../GradientButton/GradientButton';\nimport { GradientLink } from './../GradientLink/GradientLink';\nimport { logIn } from 'redux/auth/authOperations';\nimport { nanoid } from 'nanoid';\nimport { selectNotification } from '../../redux/notification/selector';\nimport {\n  showNotification,\n  hideNotification,\n} from './../../redux/notification/notificationSlice';\n\nimport { Notification } from './../Notification/Notification';\nimport {\n  faCheck,\n  faTimes,\n  faInfoCircle,\n} from '@fortawesome/free-solid-svg-icons';\n\nconst EMAIL_REGEX = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i;\nconst PASSWORD_REGEX =\n  /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/;\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string('Enter your email')\n    .trim()\n    .min(8, 'Email should be at least 8 characters')\n    .max(24, 'Email should not exceed 24 characters')\n    .matches(EMAIL_REGEX, 'Invalid email format')\n    .required('Email is required'),\n  password: Yup.string('Enter your password')\n    .trim()\n    .min(8, 'Password should be at least 8 characters')\n    .max(24, 'Password should not exceed 24 characters')\n    .matches(PASSWORD_REGEX, 'Invalid password format')\n    .required('Password is required'),\n});\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nexport const LoginForm = () => {\n  const [emailIcon, setEmailIcon] = useState('faTimes');\n  const [passwordIcon, setPasswordIcon] = useState('faTimes');\n  const notifications = useSelector(selectNotification);\n  const dispatch = useDispatch();\n\n  const handleSubmit = async (\n    values,\n    { resetForm }\n  ) => {\n    try {\n      const response = await dispatch(logIn(values));\n      resetForm(initialValues);\n\n      setEmailIcon('faTimes');\n      setPasswordIcon('faTimes');\n\n      if (response && response.error) {\n        const emailTakenNotificationId = nanoid();\n        dispatch(\n          showNotification({\n            id: emailTakenNotificationId,\n            title: 'Email',\n            type: 'error',\n            content: (\n              <>\n                Incorrect <b>{values.email}</b> field!\n              </>\n            ),\n          })\n        );\n\n        setTimeout(() => {\n          dispatch(hideNotification(emailTakenNotificationId));\n        }, 5000);\n      } else if (response && response.error) {\n        const logInTakenNotificationId = nanoid();\n        dispatch(\n          showNotification({\n            id: logInTakenNotificationId,\n            title: 'Error',\n            type: 'error',\n            content: 'Incorrect password or email field',\n          })\n        );\n\n        setTimeout(() => {\n          dispatch(hideNotification(logInTakenNotificationId));\n        }, 5000);\n      } else {\n        const successNotificationId = nanoid();\n        dispatch(\n          showNotification({\n            id: successNotificationId,\n            title: 'Success',\n            type: 'success',\n            content: 'You have successfully logged in!',\n          })\n        );\n\n        setTimeout(() => {\n          dispatch(hideNotification(successNotificationId));\n        }, 5000);\n      }\n    } catch (error) {\n      console.error('Error object:', error);\n\n      const errorNotificationId = nanoid();\n      dispatch(\n        showNotification({\n          id: errorNotificationId,\n          title: 'Error',\n          type: 'error',\n          content: 'Login failed. Please try again.',\n        })\n      );\n\n      setTimeout(() => {\n        dispatch(hideNotification(errorNotificationId));\n      }, 5000);\n    }\n  };\n\n  const handleHideNotification = id => {\n    dispatch(hideNotification(id));\n  };\n\n  return (\n    <>\n      {notifications &&\n        notifications.map((notification, index) => (\n          <Notification\n            key={`${notification.id}-${index}`}\n            id={notification.id}\n            type={notification.type}\n            title={notification.title}\n            content={notification.content}\n            onHide={handleHideNotification}\n          />\n        ))}\n\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ isSubmitting, isValid, dirty, values, setFieldValue, errors }) => (\n          <StyledLoginSection>\n            <GradientLink>\n              <span\n                style={{ fontSize: '30px', color: 'white', fontWeight: '700' }}\n              >\n                Login Form\n              </span>\n            </GradientLink>\n            <StyledForm>\n              <StyledLabel htmlFor=\"email\">\n                Email:\n                <StyledFontAwesomeIcon\n                  icon={emailIcon}\n                  className={`validation-icon ${\n                    emailIcon === faCheck ? 'valid' : 'invalid'\n                  }`}\n                />\n              </StyledLabel>\n              <StyledField\n                type=\"email\"\n                id=\"email\"\n                name=\"email\"\n                onChange={e => {\n                  const emailIsValid =\n                    validationSchema.fields.email.isValidSync(e.target.value);\n                  setEmailIcon(emailIsValid ? faCheck : faTimes);\n                  setFieldValue('email', e.target.value);\n                }}\n                onBlur={() => {\n                  if (!errors.email) {\n                    setEmailIcon(faCheck);\n                  }\n                }}\n              />\n              {emailIcon === faTimes && (\n                <StyledInstructions className=\"instructions\">\n                  <StyledFontAwesomeIcon icon={faInfoCircle} />8 to 24\n                  characters.\n                  <span\n                    aria-label=\"at symbol\"\n                    style={{\n                      fontSize: '12px',\n                      color: 'black',\n                      fontWeight: '500',\n                    }}\n                  >\n                    *\n                  </span>{' '}\n                  Must begin with a letter.\n                  <br />\n                  Allowed special characters:{' '}\n                  <span aria-label=\"at symbol\">@</span>{' '}\n                </StyledInstructions>\n              )}\n\n              <StyledLabel htmlFor=\"password\">\n                Password:\n                <StyledFontAwesomeIcon\n                  icon={passwordIcon}\n                  className={`validation-icon ${\n                    passwordIcon === faCheck ? 'valid' : 'invalid'\n                  }`}\n                />\n              </StyledLabel>\n              <StyledField\n                type=\"password\"\n                id=\"password\"\n                name=\"password\"\n                onChange={e => {\n                  const passwordIsValid =\n                    validationSchema.fields.password.isValidSync(\n                      e.target.value\n                    );\n                  setPasswordIcon(passwordIsValid ? faCheck : faTimes);\n                  setFieldValue('password', e.target.value);\n                }}\n                onBlur={() => {\n                  if (!errors.password) {\n                    setPasswordIcon(faCheck);\n                  }\n                }}\n              />\n              {passwordIcon === faTimes && (\n                <StyledInstructions className=\"instructions\">\n                  <StyledFontAwesomeIcon icon={faInfoCircle} />8 to 24\n                  characters.<span aria-label=\"at symbol\" style={{ fontSize: '12px', color: 'black', fontWeight: '500' }}>*</span>{' '}Allowed special characters:{' '}\n                  <span aria-label=\"exclamation mark\">!</span>{' '}\n                  <span aria-label=\"at symbol\">@</span>{' '}\n                  <span aria-label=\"hashtag\">#</span>{' '}\n                  <span aria-label=\"dollar sign\">$</span>{' '}\n                  <span aria-label=\"percent\">%</span>\n                  <br />\n                  Must include uppercase and lowercase letters,\n                  <br />a number and a special character.\n                </StyledInstructions>\n              )}\n\n              <GradientButton\n                type=\"submit\"\n                disabled={isSubmitting || !isValid || !dirty}\n              >\n                Log In\n              </GradientButton>\n              <SignInText>\n                Don't have an account?\n                <br />\n                <GradientLink to=\"/register\">Sign Up</GradientLink>\n              </SignInText>\n            </StyledForm>\n          </StyledLoginSection>\n        )}\n      </Formik>\n    </>\n  );\n};\n","import styled from 'styled-components';\nexport const LoginContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  padding: 1rem 0.5rem;\n  background: linear-gradient(\n    to top,\n    #ffffff 1%,\n    #185a9d 30%,\n    #43cea2 50%,\n    #43cea2 60%,\n    #185a9d 85%,\n    #ffffff 100%\n  );\n`;\n","import { LoginForm } from './../../components/LoginForm/LoginForm';\nimport { LoginContainer } from './Login.styled';\n\nconst LoginPage = () => {\n  return (\n    <LoginContainer>\n      <LoginForm />\n    </LoginContainer>\n  );\n};\n\nexport default LoginPage;\n"],"names":["gradientAnimation","keyframes","_templateObject","_taggedTemplateLiteral","gradientAnimationDelay","_templateObject2","gradientAnimation2","_templateObject3","gradientAnimation3","_templateObject4","StyledButton","styled","_templateObject5","GradientSpan","_templateObject6","GradientButton","_ref","type","disabled","children","_jsxs","_jsx","StyledLink","NavLink","GradientLink","to","fadeIn","StyledForm","Form","StyledRegisterSection","StyledFontAwesomeIcon","FontAwesomeIcon","StyledField","Field","StyledInstructions","StyledLabel","_templateObject7","SignInText","_templateObject8","StyledLoginSection","validationSchema","Yup","shape","email","trim","min","max","matches","required","password","initialValues","LoginForm","_useState","useState","_useState2","_slicedToArray","emailIcon","setEmailIcon","_useState3","_useState4","passwordIcon","setPasswordIcon","notifications","useSelector","selectNotification","dispatch","useDispatch","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","resetForm","response","emailTakenNotificationId","logInTakenNotificationId","successNotificationId","errorNotificationId","wrap","_context","prev","next","logIn","sent","error","nanoid","showNotification","id","title","content","_Fragment","setTimeout","hideNotification","t0","console","stop","_x","_x2","apply","arguments","handleHideNotification","map","notification","index","Notification","onHide","concat","Formik","onSubmit","_ref3","isSubmitting","isValid","dirty","setFieldValue","errors","style","fontSize","color","fontWeight","htmlFor","icon","className","faCheck","name","onChange","e","emailIsValid","fields","isValidSync","target","value","faTimes","onBlur","faInfoCircle","passwordIsValid","LoginContainer"],"sourceRoot":""}